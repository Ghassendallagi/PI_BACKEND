name: SonarCloud Analysis & Docker Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-deploy:
    name: SonarCloud + Docker + Nexus
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Build and analyze with SonarCloud
        working-directory: ServiceMS
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Package JAR for Docker
        working-directory: ServiceMS
        run: mvn clean package -DskipTests

      - name: Log in to Nexus Docker Registry
        run: |
          echo "${{ secrets.NEXUS_PASSWORD }}" | docker login 1314-197-18-118-229.ngrok-free.app -u ${{ secrets.NEXUS_USERNAME }} --password-stdin

      - name: Build Docker image
        working-directory: ServiceMS
        run: |
          docker build -t 1314-197-18-118-229.ngrok-free.app/pi_back/gestion-service:latest .

      - name: Push Docker image to Nexus
        run: |
          docker push 1314-197-18-118-229.ngrok-free.app/pi_back/gestion-service:latest
